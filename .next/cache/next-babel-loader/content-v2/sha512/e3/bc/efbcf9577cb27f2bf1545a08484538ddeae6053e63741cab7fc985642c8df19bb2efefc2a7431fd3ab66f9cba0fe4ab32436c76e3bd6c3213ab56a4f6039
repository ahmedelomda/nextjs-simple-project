{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\Web-Development\\\\React\\\\new\\\\NextJS\\\\06-onwards-to-a-bigger-project-starting-project\\\\06-onwards-to-bigger-project\\\\pages\\\\index.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport Head from 'next/Head';\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nvar HomePage = function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, _this);\n}; // Server Side Rendering (SSR) for pre-rendering component\n// export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//     // fetch data\n//     return {\n//         props: {\n//             meetups: dummy\n//         }\n//     }\n// }\n// Static Site  Generation (SSG) for pre-rendering component\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["G:/Web-Development/React/new/NextJS/06-onwards-to-a-bigger-project-starting-project/06-onwards-to-bigger-project/pages/index.js"],"names":["Fragment","Head","MeetupList","HomePage","props","meetups"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAExB,sBAAO,QAAC,QAAD;AAAA,2BACH,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,WAAP;AAGH,CALD,C,CAOA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;KArBMF,Q;;AA2CN,eAAeA,QAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport Head from 'next/Head';\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst HomePage = (props) => {\r\n\r\n    return <Fragment>\r\n        <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n}\r\n\r\n// Server Side Rendering (SSR) for pre-rendering component\r\n// export async function getServerSideProps(context) {\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     // fetch data\r\n\r\n//     return {\r\n//         props: {\r\n//             meetups: dummy\r\n//         }\r\n//     }\r\n// }\r\n\r\n// Static Site  Generation (SSG) for pre-rendering component\r\nexport async function getStaticProps() {\r\n    const client = await MongoClient.connect(\"mongodb+srv://amohamed5535:j1IJSAFLlXtQEgdf@cluster0.gnskzxn.mongodb.net/meetups?retryWrites=true&w=majority\")\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find().toArray();\r\n\r\n    client.close()\r\n\r\n    return {\r\n        props: {\r\n            meetups: meetups.map((item) => ({\r\n                title: item.title,\r\n                address: item.address,\r\n                image: item.image,\r\n                id: item._id.toString(),\r\n            }))\r\n        },\r\n        revalidate: 1  // every second get data\r\n    }\r\n}\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}